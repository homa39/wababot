import logging
import sqlite3
import telebot
from telebot import types

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
API_TOKEN = '7850122012:AAErxkP9TiQnqmSMQd-Ny4tk-aCf8GthijE'  # –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
CHAT_ID = '7369376817'  # –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π ID —á–∞—Ç–∞
bot = telebot.TeleBot(API_TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_numbers():
    conn = sqlite3.connect('whatsapp_numbers.db')
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM numbers")
    numbers = cursor.fetchall()
    conn.close()
    return numbers

# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def start(message):
    text = "<b>üíª–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n\n" \
           "<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.</i> \n\n <i>–ê—Ä–µ–Ω–¥–∞ –Ω–æ–º–µ—Ä–æ–≤ —É–∂–µ —Å—Ç–∞–ª–∞ –ø—Ä–æ—â–µ –±–ª–∞–≥–æ–¥–∞—Ä—è Waba, –Ω–µ —Ç–µ—Ä—è–π—Ç–µ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–¥–∏ –ª–∏—à–µ–Ω–∏—è —Å–≤–æ–∏—Ö –ø—Ä–æ—Ñ–∏—Ç–æ–≤.</i>\n\n <b>–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É - @wababot_support_bot</b>"

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_list = types.KeyboardButton("/list")
    keyboard.add(button_list)

    bot.send_message(message.chat.id, text, reply_markup=keyboard, parse_mode='HTML')

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤
@bot.message_handler(commands=['list'])
def list_numbers(message):
    numbers = get_numbers()
    if not numbers:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤.")
        return

    keyboard = types.InlineKeyboardMarkup()
    for number in numbers:
        phone_number, messenger, price = number[1], number[2], number[3]
        button = types.InlineKeyboardButton(
            text=f"+79********** –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä - ({messenger}) - –¶–µ–Ω–∞ - {price}‚ÇΩ",
            callback_data=f"rent_{phone_number}"
        )
        keyboard.add(button)

    back_button = types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    keyboard.add(back_button)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è –∞—Ä–µ–Ω–¥—ã:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def button(call):
    if call.data.startswith("rent_"):
        phone_number = call.data.split("_")[1]
        text = f"–í—ã –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –Ω–æ–º–µ—Ä: {phone_number}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ."
        bot.send_message(call.message.chat.id, text)
        bot.answer_callback_query(call.id)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        bot.register_next_step_handler_by_chat_id(call.message.chat.id, handle_payment_confirmation)

    elif call.data == "back_to_menu":
        start(call.message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏
def handle_payment_confirmation(message):
    if message.content_type == 'photo':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≤–∞–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        bot.send_photo(chat_id=CHAT_ID, photo=message.photo[-1].file_id,
                       caption=f"–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ—Ç @{message.from_user.username} (ID: {message.from_user.id})")
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∫–≤–∏—Ç–∞–Ω—Ü–∏—è –ø—Ä–∏–Ω—è—Ç–∞. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Å–∫—Ä–∏–Ω—à–æ—Ç –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(func=lambda message: True)
def unknown_command(message):
    if not message.text.startswith('/'):
        bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –∏–ª–∏ /list.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
if __name__ == '__main__':
    bot.polling(none_stop=True)